{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 我们希望重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype;//获取数组的原型\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\nlet methods = [//找到所有的变异方法\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n//concat slice 都不会改变原数组\r\n\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function (...args) {//这里重写了数组的方法\r\n    let result = oldArrayProto[method].call(this, ...args)//内部调用原来的方法，函数的劫持，切片编程\r\n\r\n    let inserted;\r\n    let ob = this.__ob__;\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.splice(2)\r\n        break\r\n    }\r\n    if (inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n    return result\r\n  }\r\n})\r\n","\r\nlet id = 0\r\nclass Dep {\r\n  constructor() {\r\n    this.id = id++;\r\n    this.subs = [] //这里存放着当前属性对应的watcher有哪些\r\n  }\r\n}\r\n\r\nDep.target = null\r\nexport default Dep\r\n","\r\nimport { newArrayProto } from './array'\r\nimport Dep from './dep'\r\nclass Observe {\r\n  constructor(data) {\r\n    Object.defineProperty(data, '__ob__', {\r\n      value: this,\r\n      enumerable: false\r\n    })\r\n    //给数据加了一个标识，如果数据上有__ob__，则说明这个属性被观测过\r\n    //Object.defineProperty只能劫持已经存在的属性，后增的，或者删除的不知道\r\n    if (Array.isArray(data)) {\r\n      //这里我们可以重写数组中的方法，7个变异方法,是可以修改数组本身的\r\n      data.__proto__ = newArrayProto\r\n      this.observeArray(data)//如果数组中放的是对象，是可以监控到对象的变化\r\n    } else {\r\n      this.walk(data)// 对 data 进行遍历，劫持属性\r\n    }\r\n\r\n  }\r\n  walk(data) {\r\n    //重新定义属性\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n  //闭包\r\n  observe(value)//对所有的对象都进行属性劫持\r\n  let dep = new Dep()//每个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {//取值的时候会执行get\r\n      return value\r\n    },\r\n    set(newValue) {//修改的时候会执行set\r\n      if (newValue === value) return\r\n      value = newValue\r\n      observe(newValue)\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport function observe(data) {\r\n  if (typeof data !== 'object' || data === null) {\r\n    return  // 只对对象进行劫持\r\n  }\r\n  // 如果一个对象被劫持过了，就不需要再被劫持\r\n  // 而要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断\r\n  // 这里先不加这段逻辑，后面章节会加\r\n  // if (data.__ob__ instanceof Observe) {\r\n  //   return data.__ob__\r\n  // }\r\n  return new Observe(data)\r\n}\r\n\r\n","import { observe } from './observe/index'\r\nexport function initState(vm) {\r\n  const opts = vm.$options;\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data; // 这个data就是 new Vue时传入的data，可能是函数也可能是对象\r\n  data = typeof data === 'function' ? data.call(vm) : data// 如果是函数则执行函数拿到返回值\r\n\r\n  vm._data = data;\r\n  observe(data)\r\n\r\n  //将vm._data 用vm来代理就可以了\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n","\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;   // aa-aa\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // aa:aa 命名空间字符串\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nexport function parseHTML(html) {\r\n  const ELEMETN_TYPE = 1;\r\n  const TEXT_TYPE = 3;\r\n  const stack = [] //用于存放元素的\r\n  let currentParent;//指向的是栈中的最后一个\r\n  let root;\r\n\r\n  //最终需要转化成一颗抽象语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMETN_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n\r\n  //利用栈型解构来构造一棵树\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs) //创造一个ast节点\r\n    if (!root) {//看一下是否是空树\r\n      root = node//如果为空则当前是树的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node)\r\n    currentParent = node  //currentParent为栈中的最后一个\r\n  }\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '')\r\n    text && currentParent.children.push({\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n  function end(tag) {\r\n    stack.pop() //弹出最后一个\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n  function advance(length) {\r\n    html = html.substring(length)\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], //标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      // 如果不是开始标签的结束就一直匹配下去\r\n      let attr, end;\r\n      while (!(end = html.match(startTagClose))) {\r\n        attr = html.match(attribute)\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n        advance(attr[0].length)\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n    return false\r\n  }\r\n  while (html) {\r\n    //textEnd如果为0说明是一个开始标签或者结束标签\r\n    let textEnd = html.indexOf('<');\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag()\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue\r\n      }\r\n    }\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd)//文本内容\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length)\r\n      }\r\n    }\r\n  }\r\n  return root\r\n}\r\n","import { parseHTML } from './parse'\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach(item => {\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node)\r\n  } else {\r\n    let text = node.text;\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = [];\r\n      let match;\r\n      defaultTagRE.lastIndex = 0;\r\n      let lastIndex = 0;\r\n      while (match = defaultTagRE.exec(text)) {\r\n        let index = match.index;\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n\r\n  return children.map(child => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`\r\n  return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  //1.就是将template转化成ast语法树\r\n  let ast = parseHTML(template)\r\n  //2.生成render方法(render方法执行后的返回结果就是虚拟DOM)\r\n  let code = codegen(ast)\r\n  code = `with(this){return ${code}}`\r\n  let render = new Function(code)\r\n\r\n  return render\r\n}\r\n","let id = 0;\r\nclass Watcher {\r\n  constructor(vm, fn, options) {\r\n    this.id = id++\r\n    this.renderWatcher = options\r\n    this.getter = fn; //getter意味着调用这个函数可以发生取值操作\r\n    this.get()\r\n  }\r\n  get() {\r\n    Dep.target = this;\r\n    this.getter()\r\n  }\r\n}\r\n\r\n//需要给每个属性增加一个dep\r\n//一个组件中有多少个属性，(n个属性会对应一个视图) ，n个dep对应一个watcher\r\n//一个属性对应多个视图\r\n\r\n\r\nexport default Watcher\r\n","export function createElementVNode(vm, tag, data, ...children) {\n    if (data == null) {\n        data = {}\n    }\n    let key = data.key;\n    if (key) {\n        delete data.key\n    }\n\n    return vnode(vm, tag, key, data, children)\n}\n\nexport function createTextVNode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n\n//ast一样吗?ast做的是语法层面的转化，他描述的是语法本身(可以描述js css html)\n//我们的虚拟dom是描述的dom元素，可以增加一些自定义属性(描述dom的)\nfunction vnode(vm, tag, key, props, children, text) {\n    return {\n        vm, tag, key, props, children, text\n    }\n}","\nimport Watcher from './observe/watcher';\nimport { createElementVNode, createTextVNode } from \"./vdom/index\";\n\nfunction createElm(vnode) {\n  let { tag, props, children, text } = vnode;\n  let data = props\n  if (typeof tag === 'string') {\n    vnode.el = document.createElement(tag)\n    patchProps(vnode.el, data)\n    children.forEach(child => {\n      vnode.el.appendChild(createElm(child))\n    })\n  } else {\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\nfunction patchProps(el, props) {\n  for (let key in props) {\n    if (key === 'style') {\n      for (let styleName in props.style) {\n        el.style[styleName] = props.style[styleName]\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n\nfunction patch(oldVNode, vnode) {\n  const isRealElement = oldVNode.nodeType;\n  if (isRealElement) {\n    const elm = oldVNode; //获取真实元素\n    const parentElm = elm.parentNode; //拿到父元素\n    console.log(vnode)\n    let newElm = createElm(vnode)\n    parentElm.insertBefore(newElm, elm.nextSibling)\n    parentElm.removeChild(elm)\n    return newElm\n  }\n}\n\nexport function initLifeCycle(Vue) {\n  Vue.prototype._update = function (vnode) {\n    const el = this.$el;\n    this.$el = patch(el, vnode)\n  }\n  Vue.prototype._render = function () {\n    return this.$options.render.call(this)//通过ast语法转义后生成的render\n  }\n  Vue.prototype._s = function (value) {\n    if (typeof value !== 'object') return value\n    return JSON.stringify(value)\n  }\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments)\n  }\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments)\n  }\n}\n\n//vue核心流程  1.创造了响应式数据 2.模板转换成ast语法树\n//3.将ast语法树转换了render函数 4.后续每次数据更新可以只执行render函数 无需再次执行ast转化的流程\n\n//render函数会产生虚拟节点(使用响应式数据)\n//根据生成的虚拟节点创造真实的DOM\nexport function mountComponent(vm, el) {\n  vm.$el = el\n  //调用render方法产生虚拟节点\n  const updateComponent = () => {\n    vm._update(vm._render())\n  }\n  new Watcher(vm, updateComponent, true)\n\n  //根据虚拟DOM产生真实DOM\n\n  //插入到el元素中\n}\n","import { initState } from './state'\r\nimport { compileToFunction } from './compiler/index'\r\nimport { mountComponent } from './lifecycle'\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    vm.$options = options\r\n    initState(vm)\r\n    if (options.el) {\r\n      vm.$mount(options.el)\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    el = document.querySelector(el)\r\n    let opts = vm.$options;\r\n    if (!opts.render) {// 如果用户没有自己写 render 函数\r\n      let template\r\n      if (el) {\r\n        if (opts.template) {\r\n          template = opts.template //这里不考虑兼容性细节，直接用 outerHTML 获取整个元素字符串\r\n        } else {\r\n          template = el.outerHTML\r\n        }\r\n      }\r\n\r\n      if (template) {// 这里就拿到了用户传入的 template 或是 el 转化的 template 字符串\r\n        // 在这里对模板进行编译\r\n        const render = compileToFunction(template)\r\n        console.log(render)\r\n        opts.render = render\r\n      }\r\n    }\r\n    mountComponent(vm, el)//组件的挂在\r\n  }\r\n}\r\n\r\n\r\n","import { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\n\r\n//通过方法传递 Vue，然后在方法中添加原型方法\r\ninitMixin(Vue)// 传递 Vue 的同时扩展了 _init 方法\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","result","call","apply","concat","inserted","ob","__ob__","splice","observeArray","id","Dep","_createClass","_classCallCheck","subs","target","Observe","data","defineProperty","value","enumerable","isArray","__proto__","walk","key","keys","defineReactive","item","observe","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMETN_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","advance","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","Watcher","fn","options","renderWatcher","getter","createElementVNode","vnode","createTextVNode","undefined","props","createElm","el","document","createElement","patchProps","appendChild","createTextNode","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","console","log","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","Vue","_update","$el","_render","_s","_c","_v","mountComponent","updateComponent","initMixin","_init","$mount","querySelector","outerHTML"],"mappings":"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"}